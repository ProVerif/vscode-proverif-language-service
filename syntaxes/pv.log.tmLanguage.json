{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "pv.log",
  "scopeName": "source.pv.log",
  "fileTypes": [
    "pv.log"
  ],
  "patterns": [
    {
      "//comment": "Declaration of facts",
      "begin" : "\\b(attacker2|mess2|table2)\\(",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "keyword.control.proverif" }
      },
      "patterns": [
        { "include": "#fact"}
      ]
    },
    {
      "//comment": "Declaration of events",
      "begin" : "\\b(b-event2|event2)\\(",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "keyword.control.proverif" }
      },
      "patterns": [
        { "include": "#fact"}
      ]
    },
    {
      "//comment": "Declaration of built-in functions",
      "begin" : "\\b(is_nat|is_not_nat|neq|geq|equal)\\(",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "keyword.control.proverif" }
      },
      "patterns": [
        { "include": "#fact"}
      ]
    },
    {
      "//comment": "Declaration of forall",
      "begin" : "\\((forall)",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "keyword.control.proverif" }
      },
      "patterns": [
        { "include": "#fact"}
      ]
    },
    {
      "//comment": "Declaration of inequalities",
      "begin" : "(@[a-zA-Z'0-9_]+) â‰ ",
      "end": "&&",
      "beginCaptures": {
        "1": { "name": "variable.parameter.proverif" }
      },
      "patterns": [
        { "include": "#fact"}
      ]
    },
    { "include": "#constants" },
    { "include": "#terms" }
  ],
  "repository": {
    "fact": {
      "patterns":[
        {
          "//comment" : "Functions",
          "begin" : "\\b([a-zA-Z'0-9_]+)\\(",
          "end": "\\)",
          "beginCaptures": {
            "1": { "name": "entity.name.function.proverif" }
          },
          "patterns": [
            { "include": "#fact"}
          ]
        },
        {
          "//comment" : "Pair",
          "begin" : "\\(",
          "end": "\\)",
          "patterns": [
            { "include": "#fact"}
          ]
        },
        {
          "//comment" : "Context",
          "begin" : "\\[",
          "end": "\\]",
          "patterns": [
            { "include": "#fact"}
          ]
        },
        {
          "//comment" : "Parameters",
          "match": "@[a-zA-Z'0-9_]+",
          "name": "variable.parameter.proverif"
        },
        {
          "//comment" : "Numbers",
          "match": "[0-9]+",
          "name": "constant.numeric.proverif"
        },
        {
          "//comment" : "Constants",
          "match": "[a-zA-Z'0-9_]+",
          "name": "variable.other.constant.proverif"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "(\\b(true|false)\\b)",
          "name": "constant.language.proverif"
        },
        {
          "match": "(\\b([0-9]+)\\b)",
          "name": "constant.numeric.proverif"
        }
      ]
    },
    "terms": {
      "patterns": [
        {
          "match": "(\\b(fail|choice|diff|not)\\b)",
          "name": "keyword.operator.proverif"
        }
      ]
    }
  }
}